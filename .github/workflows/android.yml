name: 📦构建普通版本
run-name: 📦 ${{ github.actor }} @ 构建普通版本

on:
  push:
    branches: ["develop"]
  pull_request:
    branches: ["develop"]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 将时区设为亚洲/上海
        run: |
          sudo timedatectl set-timezone Asia/Shanghai
          echo "Current time: $(date)"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 设置 JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "zulu"
          cache: gradle

      - name: 设置 Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          gradle-version: wrapper

      - name: 授予 gradlew 执行权限
        run: chmod +x gradlew

      - name: 使用 Gradle 构建
        run: ./gradlew assembleNormalRelease assembleCompatibleRelease -Pversion=${{ github.ref_name }}

      - name: 查找 APK 并设置输出
        id: locate_apks
        run: |
          normal_apk=$(find app/build/outputs/apk/normal/release -name "*.apk" | head -n 1)
          compatible_apk=$(find app/build/outputs/apk/compatible/release -name "*.apk" | head -n 1)
          echo "normal_apk=$normal_apk" >> $GITHUB_OUTPUT
          echo "compatible_apk=$compatible_apk" >> $GITHUB_OUTPUT

      - name: 将 APK 复制到暂存阶段以便签名
        run: |
          mkdir -p app/build/outputs/apk/all
          cp "${{ steps.locate_apks.outputs.normal_apk }}" app/build/outputs/apk/all/
          cp "${{ steps.locate_apks.outputs.compatible_apk }}" app/build/outputs/apk/all/

      - name: APK签名
        id: sign_apks
        uses: ilharp/sign-android-release@v2
        with:
          releaseDir: app/build/outputs/apk/all
          signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
          keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
          buildToolsVersion: 36.0.0

      - name: 提取签名 APK 路径
        id: extract_apks
        run: |
          IFS=':' read -r -a files <<< "${{ steps.sign_apks.outputs.signedFiles }}"
          for file in "${files[@]}"; do
            if [[ "$file" == *Normal* ]]; then
              echo "signed_normal=$file" >> $GITHUB_OUTPUT
            elif [[ "$file" == *Compatible* ]]; then
              echo "signed_compatible=$file" >> $GITHUB_OUTPUT
            fi
          done

      - name: 生成日期时间版本号（带 v 前缀）
        id: generate_version
        run: |
          version=v$(date "+%Y-%m-%d_%H-%M-%S")
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: 生成sha256校验值
        run: |
          sha256sum ${{ steps.extract_apks.outputs.signed_normal }} > CHECKSUMS-Sesame-Normal-${{ steps.generate_version.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256
          sha256sum ${{ steps.extract_apks.outputs.signed_compatible }} > CHECKSUMS-Sesame-Compatible-${{ steps.generate_version.outputs.version }}.${{ env.SHORT_SHA }}-signed.apk.sha256

      - name: 获取提交详细信息
        id: commit_details
        run: |
          COMMIT_MESSAGE_BODY=$( \
            if [[ "${{ github.event_name }}" == "push" ]]; then \
              echo "🔨 $(git rev-list --count ${{ github.event.before }}..${{ github.event.after }}) new commits to ${{ github.repository }}:${{ github.ref_name }} ([compare view](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.event.after }}))"; \
              echo ""; \
              git log --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an" ${{ github.event.before }}..${{ github.event.after }}; \
            elif [[ "${{ github.event_name }}" == "pull_request" ]]; then \
              echo "📦 Pull Request #${{ github.event.number }} for ${{ github.repository }}: ${{ github.head_ref }} -> ${{ github.base_ref }} ([view PR](https://github.com/${{ github.repository }}/pull/${{ github.event.number }}))"; \
              echo ""; \
              echo "Commits:"; \
              git log --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}; \
            elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then \
              echo "⚙️ Manual workflow run on ${{ github.ref_name }} by ${{ github.actor }}"; \
              echo ""; \
              echo "Latest commit:"; \
              git log -1 --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an"; \
            else \
              echo "ℹ️ Commit information for ${{ github.event_name }} event on ${{ github.ref_name }} by ${{ github.actor }}:"; \
              echo ""; \
              git log -1 --format="  %h ([view commit](https://github.com/${{ github.repository }}/commit/%H)): %s by %an"; \
            fi \
          )
          echo "COMMIT_MESSAGE_BODY<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MESSAGE_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 向TG发送组合消息
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          message: |
            📦 *普通新版本 ${{ steps.generate_version.outputs.version }} Build!*

            - 分支: `${{ github.ref_name }}`
            - 触发者: `${{ github.actor }}`

            *下载说明:*
              * Normal 为正常版本,适用于`Android 8.0`及以上的系统*
              * Compatible 为兼容版本,适用于`Android 7.0`及以下的系统,最低支持`Android 5.1`*

            ${{ steps.commit_details.outputs.COMMIT_MESSAGE_BODY }}
          format: markdown

      - name: 向TG发送正常版本APK
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          document: ${{ steps.extract_apks.outputs.signed_normal }}
